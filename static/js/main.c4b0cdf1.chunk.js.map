{"version":3,"sources":["components/phonebook/filter/Filter.module.css","components/phonebook/Phonebook.module.css","components/section/Section.js","components/phonebook/contactList/ContactList.js","components/phonebook/Phonebook.js","components/phonebook/filter/Filter.js","App/App.js","index.js","components/phonebook/contactList/ContactList.module.css"],"names":["module","exports","Section","title","children","ContactList","prop","className","s","contacts","data","map","contact","listItem","name","number","buttom","type","onClick","onDeleteButton","id","prototype","PropTypes","arrayOf","shape","string","isRequired","Phonebook","HandleInputChange","e","setState","currentTarget","value","uuidv4","HandleSubmitButton","preventDefault","props","onSubmit","state","reset","phonebook","form","this","label","htmlFor","labelName","input","onChange","pattern","required","button","Component","filter","func","App","toSubmit","find","toLowerCase","alert","prevState","handlerFilter","getFilterContact","filterNormalized","includes","onButtonDelete","prevProps","localStorage","setItem","JSON","stringify","getItem","parse","filterShow","Filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4b0cdf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1Cllj\",\"input\":\"Filter_input__1YLUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"Phonebook_phonebook__3loiB\",\"form\":\"Phonebook_form__1YEBl\",\"label\":\"Phonebook_label__1Rj4x\",\"input\":\"Phonebook_input__24JGg\",\"button\":\"Phonebook_button__DF_cm\",\"labelName\":\"Phonebook_labelName__3eRAe\"};","export default function Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import s from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function ContactList(prop) {\r\n  return (\r\n    <ul className={s.contacts}>\r\n      {prop.data.map((contact) => {\r\n        return (\r\n          <li className={s.listItem} key={contact.id}>\r\n            {contact.name}: {contact.number}\r\n            <button\r\n              className={s.buttom}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                prop.onDeleteButton(contact.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.prototype = {\r\n  prop: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      number: PropTypes.number,\r\n    })\r\n  ).isRequired,\r\n};\r\n","import { Component } from \"react\";\r\nimport Section from \"../section/Section\";\r\nimport s from \"./Phonebook.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default class Phonebook extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { name: \"\", number: \"\", id: \"\" };\r\n  }\r\n\r\n  HandleInputChange = (e) => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n      id: uuidv4(),\r\n    });\r\n  };\r\n\r\n  HandleSubmitButton = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\", id: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={s.phonebook}>\r\n        <Section title=\"Phonebook\" />\r\n        <form className={s.form} onSubmit={this.HandleSubmitButton}>\r\n          <label className={s.label} htmlFor=\"name\">\r\n            <p className={s.labelName}>Name</p>\r\n            <input\r\n              className={s.input}\r\n              onChange={this.HandleInputChange}\r\n              value={this.state.name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              required\r\n            />\r\n            <p className={s.labelName}>Number</p>\r\n            <input\r\n              className={s.input}\r\n              value={this.state.number}\r\n              onChange={this.HandleInputChange}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n            <button className={s.button} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n          </label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nconst filter = ({ value, onChange }) => {\r\n  return (\r\n    <label htmlFor=\"filter\">\r\n      <h3 className={s.title}>Find contact by name</h3>\r\n      <input\r\n        name=\"filter\"\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default filter;\r\n\r\nfilter.prototype = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { Component } from \"react\";\nimport Section from \"../components/section/Section\";\nimport ContactList from \"../components/phonebook/contactList/ContactList\";\nimport Phonebook from \"../components/phonebook/Phonebook\";\nimport Filter from \"../components/phonebook/filter/Filter\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      contacts: [\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      ],\n      filter: \"\",\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts)\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  }\n\n  componentDidMount() {\n    if (localStorage.contacts) {\n      const contacts = localStorage.getItem(\"contacts\");\n      this.setState({ contacts: JSON.parse(contacts) });\n    }\n  }\n\n  toSubmit = (data) => {\n    if (\n      this.state.contacts.find(\n        (contact) => contact.name.toLowerCase() === data.name.toLowerCase()\n      )\n    ) {\n      alert(`${data.name} is already in contact`);\n    } else\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, data],\n      }));\n  };\n\n  handlerFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilterContact = () => {\n    const filterNormalized = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterNormalized)\n    );\n  };\n\n  onButtonDelete = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((contact) => id !== contact.id),\n      };\n    });\n  };\n\n  render() {\n    const filterShow = this.getFilterContact();\n    return (\n      <div>\n        <Phonebook onSubmit={this.toSubmit} />\n        <Section title=\"Contacts\">\n          <Filter value={this.state.filter} onChange={this.handlerFilter} />\n          <ContactList data={filterShow} onDeleteButton={this.onButtonDelete} />\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__2Yjy9\",\"buttom\":\"ContactList_buttom__8sMF4\",\"contacts\":\"ContactList_contacts__1afFv\"};"],"sourceRoot":""}